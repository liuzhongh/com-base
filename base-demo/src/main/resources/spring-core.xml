<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Middle tier application context definition for the image database.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.core,com.shangkang"/>
    <aop:aspectj-autoproxy/>

    <bean id="springBeanHelper" class="com.shangkang.core.util.SpringBeanHelper"></bean>

    <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>com.shangkang.core.resources.error_message_resource</value>
                <value>com.fangkuaiyi.resources.error_message_3kw_resource</value>
                <value>com.fangkuaiyi.resources.template_message_resource</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="true"></property>
    </bean>-->

    <bean id="paginationPlugin" class="com.shangkang.core.plugin.MysqlPaginationPlugin"></bean>

    <!-- app data source -->
    <!--<bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName">
            <value>oracle.jdbc.OracleDriver</value>
        </property>
        <property name="url">
            <value>jdbc:oracle:thin:@10.6.80.147:1521:YaoOracle</value>
            &lt;!&ndash; <value>jdbc:oracle:thin:@121.43.185.180:1521:YaoOracle</value> &ndash;&gt;
        </property>
        <property name="username">
            <value>b2bcdev</value>
        </property>
        <property name="password">
            <value>b2bcdev</value>
        </property>
        <property name="validationQuery">
            <value>select 1 from dual</value>
        </property>
        <property name="maxActive">
            <value>300</value>
        </property>

        <property name="maxWait">
            <value>5000</value>
        </property>
    </bean>-->

    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:mysql://10.6.106.26:3306/batch?characterEncoding=utf-8</value>
            <!-- <value>jdbc:oracle:thin:@121.43.185.180:1521:YaoOracle</value> -->
        </property>
        <property name="username">
            <value>b2b</value>
        </property>
        <property name="password">
            <value>88888888</value>
        </property>
        <property name="validationQuery">
            <value>select 1 </value>
        </property>
        <property name="maxActive">
            <value>300</value>
        </property>

        <property name="maxWait">
            <value>5000</value>
        </property>
    </bean>

    <!-- SqlSessionFactoryBean  spring整合ibatis的入口 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:ibatis/mysql/**/*.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage"
                  value="com.shangkang.bo;com.shangkang.dto"/>
        <property name="plugins">
            <list>
                <ref bean="paginationPlugin"/>
            </list>
        </property>
    </bean>

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="springJdbcTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 定义事务传播属性 -->
    <tx:advice id="txAdvice" transaction-manager="springJdbcTransactionManager">
        <tx:attributes>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="validate*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="build*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="cancel*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="execute*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="ext*" propagation="REQUIRES_NEW" rollback-for="Exception"/>
            <tx:method name="processBatch*" propagation="REQUIRES_NEW" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="transactionPointCut" expression="execution(* com.core.batch.facade.*.*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointCut" advice-ref="txAdvice"/>
    </aop:config>

    <!-- ScanMapperFiles -->
    <bean name="mapperScanConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.shangkang.mapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

</beans>
